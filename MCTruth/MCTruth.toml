# File formatted as follows:

# Each parameter is formatted like: [XXX.YYY] where XXX refers to the group of the parameter and YYY refers to the name
# Each parameter has exactly two key:value pairs.
#   The first is the actual value of the parameter (a path, a number, a string etc.)
#   The second is the sanity check/constraint on the parameter. See TomlSanityCheck.py for a current list of supported constraints

# GenData
[GenData.OutputFolderPath]
    value = "/nevis/milne/files/ms6556/BleekerData/GramsMLRecoData/Test"
    constraint = "ValidFolder"
[GenData.OutputFileBaseName]
    value = "AnodeImagesTest"
    constraint = "NonEmptyString"
[GenData.Geometry]
    value = "cube"
    constraint = "DetectorGeometry"
[GenData.nparticles]
    value = 10000
    constraint = "SPosInt"
[GenData.nruns]
    value = 100
    constraint = "SPosInt"
[GenData.PixelCountX]
    value = 10
    constraint = "SPosInt"
[GenData.PixelCountY]
    value = 10
    constraint = "SPosInt"

# TrainData
[TrainData.LearningRate]
    value = 1e-3
    constraint =  "SPosFloat"
[TrainData.BatchSize]
    value = 32
    constraint =  "SPosInt"
[TrainData.EpochNum]
    value = 10
    constraint =  "SPosInt"
[TrainData.InputTrainingFolderPath]
    value = "/nevis/milne/files/ms6556/BleekerData/GramsMLRecoData/Train" 
    constraint = "ValidFolder"
[TrainData.BaseTrainName]
    value = "AnodeImagesTrain"
    constraint = "NonEmptyString"
[TrainData.InputValidationFolderPath]
    value = "/nevis/milne/files/ms6556/BleekerData/GramsMLRecoData/Validation"
    constraint = "ValidFolder"
[TrainData.BaseValidationName]
    value = "AnodeImagesVal"
    constraint = "NonEmptyString"
[TrainData.InputTestFolderPath]
    value = "/nevis/milne/files/ms6556/BleekerData/GramsMLRecoData/Test"
    constraint = "ValidFolder"
[TrainData.BaseTestName]
    value = "AnodeImagesTest"
    constraint = "NonEmptyString"